name: Build


on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  bindings:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        variant:
          - {os: windows-latest, arch: x64, generator: Ninja, config: RelWithDebInfo, py-arch: x64}
          - {os: ubuntu-latest, arch: x64, generator: Ninja, config: RelWithDebInfo, py-arch: x64}
          - {os: macos-latest, arch: x64, generator: Ninja, config: Release, py-arch: x64}
    runs-on: ${{ matrix.variant.os }}
    name: python${{ matrix.python-version }} / ${{ matrix.variant.os }} / ${{ matrix.python-version }} / ${{ matrix.variant.config }}
    env:
      CMAKE_FLAGS: ""
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.variant.py-arch }}

    - name: Install Python pre-requisites
      run: |
        python -m pip install -r python/requirements.txt --user --upgrade
        python -m pip install -r python/tests/requirements.txt --user --upgrade

    - name: Environment Setup (Windows)
      if: matrix.variant.os == 'windows-latest'
      run: |
        echo NB_CPU=$env:NUMBER_OF_PROCESSORS | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo CMAKE_ARCH='-A ${{ matrix.variant.arch }}' | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        # Import-Module .\.github\Invoke-VisualStudio.ps1
        # Invoke-VisualStudio2022${{ matrix.variant.arch }}

    - name: Environment Setup (Linux)
      if: matrix.variant.os == 'ubuntu-latest'
      run: |
        echo "NB_CPU=$(grep -c ^processor /proc/cpuinfo)" >> $GITHUB_ENV
        sudo apt-get -y update
        sudo apt install -y g++ ninja-build qt6-tools-dev clang
        echo CC=clang >> $GITHUB_ENV
        echo CXX=clang++ >> $GITHUB_ENV

    - name: Environment Setup (MacOS)
      if: matrix.variant.os == 'macos-latest'
      run: |
        echo NB_CPU=$(sysctl -n hw.ncpu) >> $GITHUB_ENV
        echo CC=gcc >> $GITHUB_ENV
        echo CXX=g++ >> $GITHUB_ENV

    - name: Install
      run: |
        python -m pip install . -U --user

    - name: Test
      run: |
        python -m pytest -v python/tests

    - name: Build WHL
      run: |
        mkdir wheel
        python -m pip wheel . --wheel-dir ./wheel --progress-bar on

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: die-python-py${{ matrix.python-version }}-${{ matrix.variant.os }}.${{ matrix.variant.config }}-${{ matrix.variant.arch }}
        path: |
          wheel/
