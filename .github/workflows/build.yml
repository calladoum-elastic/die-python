name: Build


on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  bindings:
    strategy:
      fail-fast: false
      matrix:
        variant:
          # https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json
          - {runner: macos-13,       arch: x64, py-arch: x64, qt-compiler: clang_64,     config: Release,        py-version: '3.8' }
          - {runner: macos-13,       arch: x64, py-arch: x64, qt-compiler: clang_64,     config: Release,        py-version: '3.9' }
          - {runner: macos-13,       arch: x64, py-arch: x64, qt-compiler: clang_64,     config: Release,        py-version: '3.10' }
          - {runner: macos-13,       arch: x64, py-arch: x64, qt-compiler: clang_64,     config: Release,        py-version: '3.11' }
          - {runner: macos-13,       arch: x64, py-arch: x64, qt-compiler: clang_64,     config: Release,        py-version: '3.12' }
          - {runner: ubuntu-22.04,   arch: x64, py-arch: x64, qt-compiler: gcc_64,       config: RelWithDebInfo, py-version: '3.8' }
          - {runner: ubuntu-22.04,   arch: x64, py-arch: x64, qt-compiler: gcc_64,       config: RelWithDebInfo, py-version: '3.9' }
          - {runner: ubuntu-22.04,   arch: x64, py-arch: x64, qt-compiler: gcc_64,       config: RelWithDebInfo, py-version: '3.10' }
          - {runner: ubuntu-22.04,   arch: x64, py-arch: x64, qt-compiler: gcc_64,       config: RelWithDebInfo, py-version: '3.11' }
          - {runner: ubuntu-22.04,   arch: x64, py-arch: x64, qt-compiler: gcc_64,       config: RelWithDebInfo, py-version: '3.12' }
          - {runner: windows-2022,   arch: x64, py-arch: x64, qt-compiler: win64_msvc2019_64,  config: RelWithDebInfo, py-version: '3.8' }
          - {runner: windows-2022,   arch: x64, py-arch: x64, qt-compiler: win64_msvc2019_64,  config: RelWithDebInfo, py-version: '3.9' }
          - {runner: windows-2022,   arch: x64, py-arch: x64, qt-compiler: win64_msvc2019_64,  config: RelWithDebInfo, py-version: '3.10' }
          - {runner: windows-2022,   arch: x64, py-arch: x64, qt-compiler: win64_msvc2019_64,  config: RelWithDebInfo, py-version: '3.11' }
          - {runner: windows-2022,   arch: x64, py-arch: x64, qt-compiler: win64_msvc2019_64,  config: RelWithDebInfo, py-version: '3.12' }
    runs-on: ${{ matrix.variant.runner }}
    name: python${{ matrix.variant.py-version }} / ${{ matrix.variant.runner }} / ${{ matrix.variant.config }}
    env:
      CMAKE_FLAGS: ""
      QT_VERSION: 6.6.2
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.variant.py-version }}
        architecture: ${{ matrix.variant.py-arch }}

    - name: Environment Setup (Windows)
      if: startsWith(matrix.variant.runner, 'windows-')
      run: |
        Import-Module .\.github\Invoke-VisualStudio.ps1
        python -m pip install aqtinstall --user --upgrade
        python -m aqt install-qt -O build windows desktop ${{ env.QT_VERSION }} ${{ matrix.variant.qt-compiler }}
        Invoke-VisualStudio2019${{ matrix.variant.arch }}
        echo 'cmake.args = ["-G", "Visual Studio 16 2019"]' >> pyproject.toml

    - name: Environment Setup (Linux)
      if: startsWith(matrix.variant.runner, 'ubuntu-')
      run: |
        sudo apt-get -y update
        sudo apt install -y g++ ninja-build clang
        echo CC=clang >> $GITHUB_ENV
        echo CXX=clang++ >> $GITHUB_ENV
        python -m pip install aqtinstall --user --upgrade
        python -m aqt install-qt -O build linux desktop ${{ env.QT_VERSION }} ${{ matrix.variant.qt-compiler }}

    - name: Environment Setup (MacOS)
      if: startsWith(matrix.variant.runner, 'macos-')
      run: |
        echo CC=clang >> $GITHUB_ENV
        echo CXX=clang++ >> $GITHUB_ENV
        python -m pip install aqtinstall --user --upgrade
        python -m aqt install-qt -O build mac desktop ${{ env.QT_VERSION }} ${{ matrix.variant.qt-compiler }}

    - name: Python installation
      run: |
        python -m pip install .[tests] -U --user

    - name: Test
      if: startsWith(matrix.variant.runner, 'macos-') == false
      run: |
        python -m pytest -v python/tests

    - name: Build WHL
      run: |
        mkdir wheel
        python -m pip wheel . --wheel-dir ./wheel --progress-bar on

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: die-python-py${{ matrix.variant.py-version }}-${{ matrix.variant.runner }}.${{ matrix.variant.config }}-${{ matrix.variant.arch }}
        path: |
          wheel/
