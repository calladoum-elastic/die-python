name: Build


on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  bindings:
    strategy:
      fail-fast: false
      matrix:
        variant:
          # https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json
          - {os: 'macos-13',     arch: x64, py-arch: x64, generator: Ninja, config: Release,        py-version: '3.8' }
          - {os: 'macos-13',     arch: x64, py-arch: x64, generator: Ninja, config: Release,        py-version: '3.9' }
          - {os: 'macos-13',     arch: x64, py-arch: x64, generator: Ninja, config: Release,        py-version: '3.10' }
          - {os: 'macos-13',     arch: x64, py-arch: x64, generator: Ninja, config: Release,        py-version: '3.11' }
          - {os: 'macos-13',     arch: x64, py-arch: x64, generator: Ninja, config: Release,        py-version: '3.12' }
          - {os: 'macos-14',     arch: x64, py-arch: x64, generator: Ninja, config: Release,        py-version: '3.8' }
          - {os: 'macos-14',     arch: x64, py-arch: x64, generator: Ninja, config: Release,        py-version: '3.9' }
          - {os: 'macos-14',     arch: x64, py-arch: x64, generator: Ninja, config: Release,        py-version: '3.10' }
          - {os: 'macos-14',     arch: x64, py-arch: x64, generator: Ninja, config: Release,        py-version: '3.11' }
          - {os: 'macos-14',     arch: x64, py-arch: x64, generator: Ninja, config: Release,        py-version: '3.12' }
          - {os: 'ubuntu-22.04', arch: x64, py-arch: x64, generator: Ninja, config: RelWithDebInfo, py-version: '3.8' }
          - {os: 'ubuntu-22.04', arch: x64, py-arch: x64, generator: Ninja, config: RelWithDebInfo, py-version: '3.9' }
          - {os: 'ubuntu-22.04', arch: x64, py-arch: x64, generator: Ninja, config: RelWithDebInfo, py-version: '3.10' }
          - {os: 'ubuntu-22.04', arch: x64, py-arch: x64, generator: Ninja, config: RelWithDebInfo, py-version: '3.11' }
          - {os: 'ubuntu-22.04', arch: x64, py-arch: x64, generator: Ninja, config: RelWithDebInfo, py-version: '3.12' }
          - {os: 'ubuntu-24.04', arch: x64, py-arch: x64, generator: Ninja, config: RelWithDebInfo, py-version: '3.9' }
          - {os: 'ubuntu-24.04', arch: x64, py-arch: x64, generator: Ninja, config: RelWithDebInfo, py-version: '3.10' }
          - {os: 'ubuntu-24.04', arch: x64, py-arch: x64, generator: Ninja, config: RelWithDebInfo, py-version: '3.11' }
          - {os: 'ubuntu-24.04', arch: x64, py-arch: x64, generator: Ninja, config: RelWithDebInfo, py-version: '3.12' }
          # - {os: windows-2022, arch: x64, generator: Ninja, config: RelWithDebInfo, py-arch: x64}
    runs-on: ${{ matrix.variant.os }}
    name: python${{ matrix.variant.py-version }} / ${{ matrix.variant.os }} / ${{ matrix.variant.config }}
    env:
      CMAKE_FLAGS: ""
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Environment Setup (Windows)
      if: startsWith(matrix.variant.os, 'windows-')
      run: |
        echo NB_CPU=$env:NUMBER_OF_PROCESSORS | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo CMAKE_ARCH='-A ${{ matrix.variant.arch }}' | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        # Import-Module .\.github\Invoke-VisualStudio.ps1
        # Invoke-VisualStudio2022${{ matrix.variant.arch }}

    - name: Environment Setup (Linux)
      if: startsWith(matrix.variant.os, 'ubuntu-')
      run: |
        echo "NB_CPU=$(grep -c ^processor /proc/cpuinfo)" >> $GITHUB_ENV
        sudo apt-get -y update
        sudo apt install -y g++ ninja-build clang qtchooser qt6-base-dev qt6-base-dev-tools qt6-declarative-dev libqt6core6 libqt6network6
        echo CC=clang >> $GITHUB_ENV
        echo CXX=clang++ >> $GITHUB_ENV

    - name: Environment Setup (MacOS)
      if: startsWith(matrix.variant.os, 'macos-')
      run: |
        echo NB_CPU=$(sysctl -n hw.ncpu) >> $GITHUB_ENV
        brew install qt6
        echo CC=clang >> $GITHUB_ENV
        echo CXX=clang++ >> $GITHUB_ENV

    - name: Environment Setup (MacOS 13)
      if: matrix.variant.os == 'macos-14'
      run: |
        brew install libidn2
        brwe link gettext --force

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.variant.py-version }}
        architecture: ${{ matrix.variant.py-arch }}

    - name: Install
      run: |
        python -m pip install .[tests] -U --user

    - name: Test
      run: |
        python -m pytest -v python/tests

    - name: Build WHL
      run: |
        mkdir wheel
        python -m pip wheel . --wheel-dir ./wheel --progress-bar on

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: die-python-py${{ matrix.variant.py-version }}-${{ matrix.variant.os }}.${{ matrix.variant.config }}-${{ matrix.variant.arch }}
        path: |
          wheel/
